<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
  	   xmlns:util="http://www.springframework.org/schema/util"
  	   xmlns:aop="http://www.springframework.org/schema/aop"
  	   xmlns:tx="http://www.springframework.org/schema/tx" 
  	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
  	   xmlns:p="http://www.springframework.org/schema/p" 
  	   xmlns:cache="http://www.springframework.org/schema/cache" 
  	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util-4.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/mvc  
			http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
			http://www.springframework.org/schema/tx    
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
            http://www.springframework.org/schema/cache    
            http://www.springframework.org/schema/cache/spring-cache.xsd"> 
	
	<!-- 注意!!!!!!!!只有本项目单元测试时,使用该属性文件测试 -->
	<!-- <context:property-placeholder location="classpath:redis.properties"/>  -->
	
	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.myron.ims.dao"/> 
	
    <!--这里注入的是JedisPoolConfig,说spirng-data-redis依赖Jedis-->
	<!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxActive" value="${redis.maxActive}" />  
        <property name="maxWait" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  -->
    
    <!-- jedis 2.8.0 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
         <!-- 控制一个pool可分配多少个jedis实例 --> 
         <property name="maxTotal">  
	        <value>${redis.maxTotal}</value>  
	     </property>  
         <!-- 控制一个pool最多有多少个状态为idle(空闲)的jedis实例 -->  
         <property name="maxIdle" value="${redis.maxIdle}"/>
         <property name="minIdle" value="${redis.minIdle}"/>
         <!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->  
         <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
       <!--   <property name="testOnBorrow" value="${redis.testOnBorrow}"/>  
    	 <property name="testOnReturn" value="${redis.testOnReturn}"/>   -->
    </bean>  
    
    <!--
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.password}"  p:pool-config-ref="jedisPoolConfig"/>  
     -->   
    <bean id = "jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<!--<property name="timeout" value="${redis.timeout}"/>-->
		<property name="password" value="${redis.password}"/>
 	</bean>
    
    <!-- redis template definition -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="jedisConnectionFactory" />  
        <!-- transcational
        <property name="enableTransactionSupport" value="true" />
         -->
        <!-- 不配置Serializer，存储只能使用String，用User存储，会提示错误User can't cast to String-->
        <property name="keySerializer">
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
        	<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>

    </bean> 
    
    <!-- Spring RedisCacheManager start -->
    <!-- turn on declarative caching -->
    <cache:annotation-driven/>
    
    <!-- declare Redis Cache Manager -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
    	<constructor-arg index="0" ref="redisTemplate"/>
    </bean>
    <!-- Spring RedisCacheManager end -->
</beans>